<?php

namespace zero\server\tcp;

use zero\server\BaseServer;

/**
 * Class TcpServer
 * @package zero\server\tcp
 */
class TcpServer extends BaseServer
{
    /**
     * 启动服务
     */
    public function run()
    {
        // 实例化 swoole 的 tcp 服务
        $this->server = new \Swoole\Server($this->config['tcp']['host'], $this->config['tcp']['port']);
        $this->server->set($this->config['tcp']['setting']);

        // 注册事件回调函数
        $this->server->on('start', [$this, 'start']);
        $this->server->on('workerStart', [$this, 'workerStart']);
        $this->server->on('receive', [$this, 'receive']);

        // 启动 http 服务器
        $this->server->start();
    }

    public function receive($server, int $fd, int $reactorID, string $data)
    {
//        var_export([$server, $fd, $reactorID, $data]);

        // todo response handle

        $response = json_encode([
            'fd' => $fd,
            'reactor' => $reactorID,
            'data' => $data
        ]);

        $server->send($fd, $response);
    }

    public function listen($listenServer)
    {
        $listenServer->addListener($this->config['tcp']['host'], $this->config['tcp']['port'], SWOOLE_SOCK_TCP);
        $listenServer->set($this->config['tcp']['setting']);
        $listenServer->on('receive', [$this, 'receive']);
    }

    public function start()
    {
        parent::start(); // TODO: Change the autogenerated stub

        echo " *********************************************************************" . PHP_EOL;
        echo sprintf("* tcp  |  Listen: %s:%d, type: tcp, worker: %d  ",
                $this->config['tcp']['host'],
                $this->config['tcp']['port'],
                $this->config['tcp']['setting']['worker_num']
            ) . PHP_EOL;
        echo " *********************************************************************" . PHP_EOL;
    }

}
